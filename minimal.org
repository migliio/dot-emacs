#+TITLE: GNU Emacs minimal configuration file
#+AUTHOR: Claudio Migliorelli (@miglio)
#+PROPERTY: header-args:emacs-lisp :tangle minimal.el
* Init work

In this piece of code I add stuff to perform the startup of the Emacs init file to make it work properly.

#+begin_src emacs-lisp
(add-to-list 'load-path (concat user-emacs-directory "modules/"))
#+end_src

* Startup performance

I find myself closing and opening Emacs a plenty of times. I want it to be responsive and fast. I'm going to reduce the frequency of garbage collection and then I'll measure the startup time.

#+begin_src emacs-lisp
(require 'startup-performance-setup)
#+end_src
  
* Package management

First of all, let's initialize the package management setting up ELPA, MELPA and org package repositories. After that, I want Emacs loading =use-package= to manage package configuration.

#+begin_src emacs-lisp
(require 'package-management-setup)
#+end_src

* General configuration
** Skeletons

I like to define my own skeletons to quickly insert recurring patterns.

#+begin_src emacs-lisp
(require 'skeletons-setup)
#+end_src

** Custom functions

Adding some custom functions I use to make my life easier.

#+begin_src emacs-lisp
(require 'custom-functions-setup)
#+end_src

** Useful defaults

Enable some useful defaults.

#+begin_src emacs-lisp
(require 'useful-defaults-setup)
#+end_src

** Theme

Load a simple and clean theme.

#+begin_src emacs-lisp
(require 'theme-setup)
#+end_src

** Emacs auto-save

Put Emacs auto-save and backup files to /tmp/.

#+begin_src emacs-lisp
(require 'autosave-setup)
#+end_src

** Files navigation

#+begin_src emacs-lisp
(require 'files-navigation-setup)
#+end_src
   
** File visualization
*** Open with

I want to open some files with external programs and =open-with= addresses this problem.

#+begin_src emacs-lisp
(require 'openwith-setup)
#+end_src
	
*** Undo tree

I really love the =undo-tree= mode visualization, so I'm going to enable it.

#+begin_src emacs-lisp
(require 'undo-tree-setup)
#+end_src

*** Export backends

Managing org export backends (before loading ~org.el~).

#+begin_src emacs-lisp
(require 'org-export-backends-setup)
#+end_src

** Personal knowledge management
*** Skeletons

I like to define my own skeletons to quickly insert recurring patterns.

#+begin_src emacs-lisp
(require 'skeletons-setup)
#+end_src

*** Org mode
**** Install and general configuration

Well, I think that =org-mode= doesn't need any introduction or explanation. In the last two years ([2021-09-03 Fri]) it changed my life for the best.

#+begin_src emacs-lisp
(require 'org-mode-setup)
#+end_src

**** Org-roam
The best package to manage my PKM is definitely =org-roam=. Installing/configuring it.

#+begin_src emacs-lisp
(require 'org-roam-setup)
#+end_src

**** Org-remark

Using org remark to add annotations to org my org files.

#+begin_src emacs-lisp
(require 'org-remark-setup)
#+end_src

**** Citar

Using the superior citation manager.

#+begin_src emacs-lisp
(require 'citar-setup)
#+end_src

**** Epresent

Nerdy-looking way to turn org mode notes into presentations.

#+begin_src emacs-lisp
(require 'epresent-setup)
#+end_src

** Programming stuff
*** Ctags

Using ctags for kernel development.

#+begin_src emacs-lisp
(require 'ctags-setup)
#+end_src

*** Completion

Using Company for completion.

#+begin_src emacs-lisp
(require 'company-setup)
#+end_src

*** LSP

Using =lsp-mode= to handle IDE-like features.

#+begin_src emacs-lisp
(require 'lsp-setup)
#+end_src

*** Terminal

I use ~vterm~ as terminal inside Emacs.

#+begin_src emacs-lisp
(require 'vterm-setup)
#+end_src
